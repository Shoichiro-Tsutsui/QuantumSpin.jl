var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = QuantumSpin","category":"page"},{"location":"#QuantumSpin","page":"Home","title":"QuantumSpin","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [QuantumSpin]","category":"page"},{"location":"#QuantumSpin.σʸ","page":"Home","title":"QuantumSpin.σʸ","text":"σʸ\n\ny-component of the Pauli matrix, sigma^y.\n\nExamples\n\njulia> σʸ\n2×2 SparseMatrixCSC{Complex{Float64},Int64} with 2 stored entries:\n  [2, 1]  =  0.0+1.0im\n  [1, 2]  =  -0.0-1.0im\n\n\n\n\n\n","category":"constant"},{"location":"#QuantumSpin.σˣ","page":"Home","title":"QuantumSpin.σˣ","text":"σˣ\n\nx-component of the Pauli matrix, sigma^x.\n\nExamples\n\njulia> σˣ\n2×2 SparseMatrixCSC{Complex{Float64},Int64} with 2 stored entries:\n  [2, 1]  =  1.0+0.0im\n  [1, 2]  =  1.0+0.0im\n\n\n\n\n\n","category":"constant"},{"location":"#QuantumSpin.σᶻ","page":"Home","title":"QuantumSpin.σᶻ","text":"σᶻ\n\nz-component of the Pauli matrix, sigma^z.\n\nExamples\n\njulia> σᶻ\n2×2 SparseMatrixCSC{Complex{Float64},Int64} with 2 stored entries:\n  [1, 1]  =  1.0+0.0im\n  [2, 2]  =  -1.0+0.0im\n\n\n\n\n\n","category":"constant"},{"location":"#QuantumSpin.σ⁰","page":"Home","title":"QuantumSpin.σ⁰","text":"σ⁰\n\nThe 2×2 unit matrix.\n\nExamples\n\njulia> σ⁰\n2×2 SparseMatrixCSC{Complex{Float64},Int64} with 2 stored entries:\n [1, 1]  =  1.0+0.0im\n [2, 2]  =  1.0+0.0im\n\n\n\n\n\n","category":"constant"},{"location":"#QuantumSpin.:⊗-Tuple{Any,Any,Vararg{Any,N} where N}","page":"Home","title":"QuantumSpin.:⊗","text":"⊗(A, B, C...)\n\nCompute the kronecker product, Aotimes Botimes C cdots.\n\n\n\n\n\n","category":"method"},{"location":"#QuantumSpin.:⊗-Tuple{Any,Any}","page":"Home","title":"QuantumSpin.:⊗","text":"⊗(A, B)\n\nCompute the kronecker product, Aotimes B.\n\nExamples\n\njulia> [1 0; 0 1]⊗[1 0; 0 -1]\n4×4 Array{Int64,2}:\n 1   0  0   0\n 0  -1  0   0\n 0   0  1   0\n 0   0  0  -1\n\n\n\n\n\n","category":"method"},{"location":"#QuantumSpin.chain_graph-Tuple{Any,Any}","page":"Home","title":"QuantumSpin.chain_graph","text":"chain_graph(N, ispbc)\n\nAn adjacency matrix for a chain graph with length N.\n\n\n\n\n\n","category":"method"},{"location":"#QuantumSpin.hamiltonian-NTuple{6,Any}","page":"Home","title":"QuantumSpin.hamiltonian","text":"hamiltonian(Jˣ, Jʸ, Jᶻ, Γˣ, Γʸ, Γᶻ)\n\nCompute a Hamiltonian:\n\nH = sum_ij left(     J^x_ij sigma_i^x sigma_j^x     + J^y_ij sigma_i^y sigma_j^y     + J^z_ij sigma_i^z sigma_j^z     right)     +     sum_i left(     Γ^x_i sigma_i^x     + Γ^y_i sigma_i^y     + Γ^z_i sigma_i^z     right)\n\n\n\n\n\n","category":"method"},{"location":"#QuantumSpin.issquare-Tuple{Any}","page":"Home","title":"QuantumSpin.issquare","text":"issquare(N)\n\nCheck whether the number is Perfect Square or not.\n\n\n\n\n\n","category":"method"},{"location":"#QuantumSpin.lattice-Tuple{Symbol,Int64}","page":"Home","title":"QuantumSpin.lattice","text":"lattice(s, N, ispbc=true)\n\nCreate a adjacency matrix of lattice s with size N. The periodic boundary condition is imposed by default. Admissible values for s are:\n\ns graph type\n:chain A one dimensional chain.\n:square A two dimensional square lattice.\n\n\n\n\n\n","category":"method"},{"location":"#QuantumSpin.on_site_term-Tuple{Any,Any}","page":"Home","title":"QuantumSpin.on_site_term","text":"spin_spin_interaction_term(A, σ)\n\nCompute a spin-spin interaction term:\n\nsum_i h_i sigma_i^alpha,\n\nwhere h_i is a vector and alpha = xyz.\n\n\n\n\n\n","category":"method"},{"location":"#QuantumSpin.pbc-Tuple{Array{Int64,1},Any}","page":"Home","title":"QuantumSpin.pbc","text":"pbc(indeces::Vector{Int}, N)\n\nConvert the site index to one that is consistent to the periodic boundary condition.\n\nExamples\n\njulia> pbc([0, 1, 2, 3, 4], 3)\n[3, 1, 2, 3, 1]\n\n\n\n\n\n","category":"method"},{"location":"#QuantumSpin.pbc-Tuple{Int64,Any}","page":"Home","title":"QuantumSpin.pbc","text":"pbc(index::Int, N)\n\nConvert the site index to one that is consistent to the periodic boundary condition.\n\nExamples\n\njulia> pbc(0, 3)\n3\n\njulia> pbc(1, 3)\n1\n\njulia> pbc(2, 3)\n2\n\njulia> pbc(3, 3)\n3\n\njulia> pbc(4, 3)\n1\n\n\n\n\n\n","category":"method"},{"location":"#QuantumSpin.pbc-Tuple{UnitRange{Int64},Any}","page":"Home","title":"QuantumSpin.pbc","text":"pbc(indeces::UnitRange{Int}, N)\n\nConvert the site index to one that is consistent to the periodic boundary condition.\n\nExamples\n\njulia> pbc(-7:7, 3)\n[2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1]\n\n\n\n\n\n","category":"method"},{"location":"#QuantumSpin.set_spins-Tuple{Any,Array{Int64,1},Any}","page":"Home","title":"QuantumSpin.set_spins","text":"set_spins(N, siteindeces::Vector{Int}, σs)\n\nReturn a list of Pauli matrices.\n\nExamples\n\njulia> set_spins(3, [2], [σᶻ]) == [σ⁰, σᶻ, σ⁰]\ntrue\n\njulia> set_spins(4, [2], [σᶻ]) == [σ⁰, σᶻ, σ⁰, σ⁰]\ntrue\n\njulia> set_spins(4, [2, 3], [σᶻ, σˣ]) == [σ⁰, σᶻ, σˣ, σ⁰]\ntrue\n\n\n\n\n\n","category":"method"},{"location":"#QuantumSpin.set_spins-Tuple{Any,CartesianIndex,Any}","page":"Home","title":"QuantumSpin.set_spins","text":"set_spins(N, siteindeces::CartesianIndex, σs)\n\nReturn a list of Pauli matrices, where siteindeces is the row and column number of an adjacency matrix.\n\nExamples\n\njulia> set_spins(4, CartesianIndex(2, 3), [σᶻ, σˣ]) == [σ⁰, σᶻ, σˣ, σ⁰]\ntrue\n\n\n\n\n\n","category":"method"},{"location":"#QuantumSpin.set_spins-Tuple{Any,Int64,SparseArrays.SparseMatrixCSC}","page":"Home","title":"QuantumSpin.set_spins","text":"set_spins(N, index::Int, σ::SparseMatrixCSC)\n\nReturn a list of Pauli matrices.\n\nExamples\n\njulia> set_spins(3, 2, σᶻ) == [σ⁰, σᶻ, σ⁰]\ntrue\n\n\n\n\n\n\n","category":"method"},{"location":"#QuantumSpin.spin_spin_interaction_term-Tuple{Any,Any}","page":"Home","title":"QuantumSpin.spin_spin_interaction_term","text":"spin_spin_interaction_term(A, σ)\n\nCompute a spin-spin interaction term:\n\nsum_ij A_ij sigma_i^alpha sigma_j^alpha,\n\nwhere A_ij is an adjacency matrix and alpha = xyz.\n\n\n\n\n\n","category":"method"},{"location":"#QuantumSpin.square_graph-Tuple{Any,Any}","page":"Home","title":"QuantumSpin.square_graph","text":"square_graph(N, ispbc)\n\nAn adjacency matrix for a square lattice whose number of vertices is N.\n\n\n\n\n\n","category":"method"}]
}
